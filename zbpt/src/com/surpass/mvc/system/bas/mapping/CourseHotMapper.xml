<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.surpass.mvc.system.bas.dao.CourseHotMapper">

	<!-- 查询信息 -->
	<select id="query"
		resultType="com.surpass.mvc.system.bas.model.CourseRecommendBean"
		parameterType="map">
		SELECT
		c.id id,
		c.title title,
		c.`level` 'level',
		c.type type,
		c.store
		store,
		c.teacher_id teacher_id,
		c.teacher_name teacher_name,
		c.clicks
		clicks,
		c.ji_fen ji_fen,
		c.jia_ge jia_ge,
		c.`status` 'status',
		c.path
		path,
		c.img img,
		c.tui_jie tui_jie,
		c.`index` `index`,
		DATE_FORMAT(c.cjsj, '%Y-%m-%d %H:%i:%s') cjsj,
		h.id tj_id,
		h.author_act_user_name recommend_author,
		DATE_FORMAT(h.cjsj, '%Y-%m-%d
		%H:%i:%s') recommend_time
		FROM t_course_hot h
		LEFT JOIN t_course c ON
		h.course_id = c.id
		<where>
			and c.status = 1
			<if test="title != null and title !='' ">
				and c.title like CONCAT('${title}','%' )
			</if>
		</where>
		ORDER BY h.cjsj DESC
		LIMIT #{start}, #{limit}
	</select>

	<!-- 查询信息数据条数 -->
	<select id="total" resultType="Integer"
		parameterType="com.surpass.mvc.system.bas.model.Course">
		select count(h.id)
		FROM t_course_hot h
		LEFT JOIN t_course c ON
		h.course_id = c.id
		<where>
			and c.status = 1
			<if test="title != null and title !='' ">
				and c.title like CONCAT('${title}','%' )
			</if>
		</where>
	</select>

	<!-- 查询信息数据条数 -->
	<select id="getCourseHotByCourseIdTotle" resultType="Integer"
		parameterType="com.surpass.mvc.system.bas.model.CourseHot">
		select count(h.id) FROM t_course_hot h where course_id =
		#{course_id}
	</select>

	<delete id="deleteByKey" parameterType="java.lang.String">
		delete from
		t_course_hot
		where
		id in (${ids})
	</delete>

	<update id="updateDate" parameterType="com.surpass.mvc.system.bas.model.CourseHot">
		update t_course_hot
		set
		cjsj = now(),
		author_act_user_id = #{author_act_user_id},
		author_act_user_name = #{author_act_user_name}
		where course_id = #{course_id,jdbcType=INTEGER}
	</update>

	<resultMap id="BaseResultMap" type="com.surpass.mvc.system.bas.model.CourseHot">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Jul 07 
			11:08:35 CST 2018. -->
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="course_id" property="course_id" jdbcType="INTEGER" />
		<result column="author_act_user_id" property="author_act_user_id"
			jdbcType="VARCHAR" />
		<result column="cjsj" property="cjsj" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Jul 07 
			11:08:35 CST 2018. -->
		id, course_id, author_act_user_id, cjsj
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Jul 07 
			11:08:35 CST 2018. -->
		select
		<include refid="Base_Column_List" />
		from t_course_hot
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Jul 07 
			11:08:35 CST 2018. -->
		delete from t_course_hot
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.surpass.mvc.system.bas.model.CourseHot">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Jul 07 
			11:08:35 CST 2018. -->
		insert into t_course_hot (id, course_id, author_act_user_id,
		cjsj)
		values (#{id,jdbcType=INTEGER}, #{course_id,jdbcType=INTEGER},
		#{author_act_user_id,jdbcType=VARCHAR},
		#{cjsj,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.surpass.mvc.system.bas.model.CourseHot">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Jul 07 
			11:08:35 CST 2018. -->
		insert into t_course_hot
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="course_id != null">
				course_id,
			</if>
			<if test="author_act_user_id != null">
				author_act_user_id,
			</if>
			<if test="author_act_user_name != null">
				author_act_user_name,
			</if>
			cjsj,
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="course_id != null">
				#{course_id,jdbcType=INTEGER},
			</if>
			<if test="author_act_user_id != null">
				#{author_act_user_id,jdbcType=VARCHAR},
			</if>
			<if test="author_act_user_name != null">
				#{author_act_user_name,jdbcType=VARCHAR},
			</if>
			now(),
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.surpass.mvc.system.bas.model.CourseHot">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Jul 07 
			11:08:35 CST 2018. -->
		update t_course_hot
		<set>
			<if test="course_id != null">
				course_id = #{course_id,jdbcType=INTEGER},
			</if>
			<if test="author_act_user_id != null">
				author_act_user_id =
				#{author_act_user_id,jdbcType=VARCHAR},
			</if>
			<if test="cjsj != null">
				cjsj = #{cjsj,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.surpass.mvc.system.bas.model.CourseHot">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Sat Jul 07 
			11:08:35 CST 2018. -->
		update t_course_hot
		set course_id = #{course_id,jdbcType=INTEGER},
		author_act_user_id = #{author_act_user_id,jdbcType=VARCHAR},
		cjsj =
		#{cjsj,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>