<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.surpass.mvc.system.bas.dao.MemberIntegralMapper" >
  <resultMap id="BaseResultMap" type="com.surpass.mvc.system.bas.model.MemberIntegral" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="memberid" property="memberid" jdbcType="INTEGER" />
    <result column="signdate" property="signdate" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="point" property="point" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, memberid, signdate, type, point, status, createdate
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from member_integral
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from member_integral
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.surpass.mvc.system.bas.model.MemberIntegral" >
    insert into member_integral (id, memberid, signdate, 
      type, point, status, 
      createdate)
    values (#{id,jdbcType=INTEGER}, #{memberid,jdbcType=INTEGER}, #{signdate,jdbcType=TIMESTAMP}, 
      #{type,jdbcType=VARCHAR}, #{point,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, 
      #{createdate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.surpass.mvc.system.bas.model.MemberIntegral" >
    insert into member_integral
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberid != null" >
        memberid,
      </if>
      <if test="signdate != null" >
        signdate,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="point != null" >
        point,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=INTEGER},
      </if>
      <if test="signdate != null" >
        #{signdate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="point != null" >
        #{point,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.surpass.mvc.system.bas.model.MemberIntegral" >
    update member_integral
    <set >
      <if test="memberid != null" >
        memberid = #{memberid,jdbcType=INTEGER},
      </if>
      <if test="signdate != null" >
        signdate = #{signdate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="point != null" >
        point = #{point,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.surpass.mvc.system.bas.model.MemberIntegral" >
    update member_integral
    set memberid = #{memberid,jdbcType=INTEGER},
      signdate = #{signdate,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=VARCHAR},
      point = #{point,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      createdate = #{createdate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>